<?php
/**
 * @file
 *
 * This module provides type called job post
 *
 */

/**
 * Implements hook_node_info().
 */
function job_post_node_info() {
  return array(
      'job_post' => array(
      'name' => t('Job Post'),
      'base' => 'job_post',
      'description' => t('Use this content type to post a job'),
      'has_title' => TRUE,
      'title_table' => 'Job Title',
      'help' => t('Enter the job title , job description, and the name of the company that post the job'),
    )
  );
}

/**
 * Implements hook_menu_alter().
 *
 */
function job_post_menu_alter(&$callback) {
  // Example - disable the page at node/add
  /*
   *$items['node/add']['access callback'] = FALSE;
   */
  if(!user_access('administer node')) {

    $callback['node/add/job_post']['access callback'] = FALSE;

    //Must unset access arguments or Drupal will use user_access()
    unset($callback['node/add/job_post']['access arguments']);
  }
}

/**
 * Implements hook_permission().
 * Defining node type spectific permission with hook_permission
 */
function job_post_permission() {
  return array(
    'create job post' =>  array(
      'title' => t('Creat a job post'),
      'description' => t('Create a job post'),
    ),

    'edit own job post' => array(
      'title' =>t('Edit own job post'),
      'description' => t('Edit own job post'),
      ),

    'edit any job post' => array(
      'title' => t('Edit any job post'),
      'description' => t('Edit any job post'),

      ),

    'delete any job post' => array(
        'title' => t('Delete any job post'),
        'description' => t('Delete any job post'),
      ),
  );
}

/**
 * Implements hook_node_access().
 */
function job_post_node_access($node, $op, $account) {

  $is_author = $account->uid == $node->uid;

  switch ($op) {
    case 'create':
      // Allow if user's role has 'create joke' permission
      if (user_access('create job post', $account)) {

        return NODE_ACCESS_ALLOW;
      }
    case 'update':
      if (user_access('edit own job post', $account) && $is_author || user_access('edit any job post', $account)) {

        return NODE_ACCESS_ALLOW;
      }
    case 'delete':
      if(user_access('delete own job post', $account) && $is_author || user_access('edit any job post', $account)) {

        return NODE_ACCESS_ALLOW;
      }
  }

}

/**
 * Implements hook_form().
 */
function job_post_form($node, &$form_state) {

  return node_content_form($node, $form_state);
}

/**
 * Implements hook_validate().
 */

function job_post_validate($node) {

  if(isset($node->job_post_company) && strlen($node->job_post_company['und'][0]['value']) < 2) {
    form_set_error($node->job_post_company, t('The company name is too short. It must be atleast 2 characters.'), $limit_validation_error = NULL);
  }
}

/**
 * Implements hook_insert().
 *
 * Function called when click submission and save our data
 */

function job_post_insert($node) {
  watchdog('job_post', 'A new job post title: '.$node->title.'for company'.$node->job_post_company['und'][0]['value'].
  'was added by UID'.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);
}

/**
 * Implements hook_update().
 *
 * Keeping data current with hook update
 */
function job_post_update($node) {
  watchdog('job_post', 'A job post title: '.$node->title.'for company'.$node->job_post_company['und'][0]['value'].
  'was updated by UID'.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);
}


/**
 * Implements hook_delete().
 *
 * Function cleaning up data node
 */
function job_post_delete($node) {

  watchdog('job_post', 'A job post title: '.$node->title.'for company'.$node->job_post_company['und'][0]['value'].
  'was deleted by UID'.$node->uid, $variables = array(), WATCHDOG_NOTICE, $link = 'node/'.$node->nid);
}

/**
 * Implements hook_load().
 *
 * Function modifying nodes of our type
 */
function job_post_load($nodes) {

  foreach ($nodes as $node) {
    $node->sponsor = "ACME Career Services, Your source for drupal jobs";
  }
}

/**
 * Implements hook_view().
 *
 *
 */
function job_post_view($node, $view_mode) {

  if ($view_mode == 'full') {
    $node->content['sponsor'] = array(
      '#markup' => theme('sponsor', array('sponsor'=>$node->sponsor, 'sponsor_id' => $node_nid)),
      '#weight' => 100,
      );
  }
  return $node;
}

/**
 * Implements hook_theme().
 */
function job_post_theme() {
  return array(
    'sponsor' => array(
      'variables' => array('sponsor' => null, 'sponsor_id' => null),
      'template' => 'sponsor',
    ),
  );
}

