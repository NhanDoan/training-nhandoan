<?php
/**
 * @file
 *
 * Creating module menufun example
 */

/**
 * Implements hook_permission().
 */
function menufun_permission() {
  return array(
    /*
     *'administer my module' =>  array(
     *  'title' => t('Administer my module'),
     *  'description' => t('Perform administration tasks for my module.'),
     *),
     */
    'receive greeting' =>  array(
      'title' => t('Receive a greeting'),
      'description' => t('Allow users receive a greeting message'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function menufun_menu() {
  /*
   *$items['blog'] = array(
   *  'title' => 'blogs',
   *  'page callback' => 'blog_page',
   *  'access arguments' => array('access content'),
   *  'type' => MENU_SUGGESTED_ITEM,
   *);
   */

  // example woking with basic wildcards
  $items['menufun/%'] =array(
    'title' => 'Working with Basic Wildcards',
    'page callback' => 'menufun_hello',
    'page arguments' => array(1, 'hi', '123', 'bla/bla'),
    'access callback' => TRUE,
  );

  // creat item menu, add link and access permisson for menu items
  $items['menufun'] = array(
    'title' => 'Menu Fun',
    'page callback' => 'menufun_greeting',
    'file' =>'menufun_greeting.inc',
    'page arguments' =>array('Nhan', 'Ngoc', '3', '4'),
    'access callback' => 'user_access',
    'access arguments' => array('receive greeting'),
    'type' => MENU_NORMAL_ITEM,
    'weight'=> -1,
  );

  // creat item menu nesting
  $items['menufun/farewell'] = array(
    'title' => 'Farewell',
    'title callback' => 'title_dynamic',
    'page callback' =>'menufun_farewell',
    'file' => 'menufun_greeting.inc',
    'access callback' =>'user_access',
    'access arguments' => array('receive greeting'),
    'type' => MENU_NORMAL_ITEM,
  );

  // Using the Value of a wildcards
  $items['menufun/%/bla/bla'] = array(
    'title' => 'Using the value of a wildcards',
    'page callback' => 'menufun_wildcards',
    'page arguments' => array(1),
    'type' => TRUE
  );
  //Special cases for wildcards and to_arg function
  $items['menufun/%a_zoo_animal'] = array(
    'title' =>'Examle using wildcards with to_arg()',
    'page callback' => 'menufun_arg',
    'page arguments' => array(1),
    'access callback' =>TRUE,
    'type' => MENU_NORMAL_ITEM,
    'weight' => -10,
  );
  //
  // Wildcards and parameter replacement
  // $items['user/%user_uid_only_optional'] = array(
  //   'title' => 'Wildcards in my account',
  //   'title callback' => 'user_page_title',
  //   'title arguments' => array(1),
  //   'page callback' => 'user_view_page',
  //   'page arguments' => array(1),
  //   'access callback' => 'user_view_access',
  //   'access arguments' => array(1),
  //   'weight' => -10,
  //   'menu_name' => 'navigation',
  // );
  return $items;
}

function menufun_hello()
{
  return t('Hello !');
}

function menufun_wildcards($name = NULL) {

  return t('Hello. $name is @name ', array('@name' => $name));
}

function menufun_arg($animal) {

  return t("Hello $animal");
}

function a_zoo_animal_to_arg($arg) {

  return 'tiger';
}

/**
 * Implements hook_menu_alter().
 *
 * Altering menu items from other modules
 * @param  array $items
 *
 * @return [type]        [description]
 */
function menufun_menu_alter(&$items) {
  // Example - disable the page at node/add
  /*
   *$items['node/add']['access callback'] = FALSE;
   */
  $items['logout']['page callback'] = 'menufun_user_logout';
  $items['logout']['access callback'] = 'user_is_logged_in';

  unset($items['logout']['file']);
}

/**
 * Implements hook_user_logout().
 */
function menufun_user_logout() {

  global $user;
  watchdog('menufun', 'Session close for %name', array('%name' => $user->name));

  // Destroy the current session
  session_destroy();

  // Run 'Logout' operation of the user hook so modules can respond to the logout if they want to
  module_invoke_all('user','logout', NULL, $user);

  // Load the anonymous user so the global $user object will be correct on any hook_exit() implemention
  $user = drupal_anonymous_user();

  drupal_goto('http://localhost/training-nhandoan/drupals/drupal/');
}

/**
 * Implements hook_menu_link_alter().
 *
 * Altering menu links from other modules
 */
function menufun_menu_link_alter(&$item) {

  if($item['link_path'] = 'user/logout') {
    $items['link_title'] = 'Singe off!';
  }

}
